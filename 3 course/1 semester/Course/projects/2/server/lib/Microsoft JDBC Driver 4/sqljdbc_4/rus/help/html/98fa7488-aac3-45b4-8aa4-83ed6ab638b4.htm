<html xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><head><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" /><META NAME="save" CONTENT="history" /><title>Общие сведения о преобразованиях типов данных</title><meta name="Language" content="ru-RU" /><meta name="System.Keywords" content="преобразования типов данных" /><meta name="Microsoft.Help.Id" content="98fa7488-aac3-45b4-8aa4-83ed6ab638b4" /><meta name="Description" content="Чтобы упростить преобразование типов данных языка программирования Java в типы данных SQL Server, драйвер Драйвер Microsoft JDBC для SQL Server реализует преобразование типов данных в соответствии с требованиями спецификации JDBC." /><meta name="Microsoft.Help.ContentType" content="Concepts" /><link rel="stylesheet" type="text/css" href="../local/Classic.css" /><script type="text/javascript" src="../scripts/EventUtilities.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/SplitScreen.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/Dropdown.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/script_manifold.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/script_feedBack.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/CheckboxMenu.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/CommonUtilities.js">&amp;nbsp;</script><script type="text/javascript" src="../local/script_main.js">&amp;nbsp;</script></head><body><div id="header"><table id="bottomTable" cellpadding="0" cellspacing="0"><tr><td align="left"><span id="headerBold">Общие сведения о преобразованиях типов данных</span></td></tr></table><table id="gradientTable"><tr><td class="nsrBottom" background="../icons/gradient.gif" /></tr></table></div><div id="mainSection"><div id="mainBody"><div class="introduction"><p>Чтобы упростить преобразование типов данных языка программирования Java в типы данных SQL Server, драйвер Драйвер Microsoft JDBC для SQL Server реализует преобразование типов данных в соответствии с требованиями спецификации JDBC. Повышенная гибкость обеспечивается тем, что следующие типы данных можно преобразовывать в прямом и обратном направлениях: <span sdata="langKeyword" value="Object"><span class="keyword">Object</span></span>, <span sdata="langKeyword" value="String"><span class="keyword">String</span></span> и <span sdata="langKeyword" value="byte[]"><span class="keyword">byte[]</span></span>. </p></div><h1 class="heading">Преобразование метода считывания</h1><div id="sectionSection0" class="section" name="collapseableSection" style=""><p>Исходя из типов данных SQL Server на следующей диаграмме показана схема преобразования для драйвера JDBC для методов <b>get&lt;Type&gt;()</b> класса <a href="eaffcff1-286c-459f-83da-3150778480c9.htm">SQLServerResultSet</a>, а также поддерживаемое преобразование для методов <b>get&lt;Type&gt;</b> класса <a href="30710a63-c05d-47d9-9cf9-c087a1c76373.htm">SQLServerCallableStatement</a>.</p><img alt="JDBCGetterConversions" src="../art/JDBCGetterConversions.gif" /><p>Преобразования, поддерживаемые методами считывания драйвера JDBC, делятся на три категории.</p><ul><li><p><span class="label">Без потерь (x)</span>. Преобразования для случаев, когда тип метода считывания является таким же или меньшим, чем базовый тип сервера. Например, при вызове метода <b>getBigDecimal</b> для базового десятичного столбца сервера преобразование не потребуется.</p></li><li><p><span class="label">С преобразованием (y)</span>. Преобразования из числовых типов сервера в типы языка Java, когда преобразование осуществляется стандартным образом и отвечает правилам преобразования языка Java. Для этих видов преобразования точность всегда усекается (никогда не округляется), а переполнение обрабатывается как остаток от деления на тип назначения, который меньше по размеру. Например, вызов метода <b>getInt</b> для базового столбца <span sdata="langKeyword" value="decimal"><span class="keyword">decimal</span></span>, который содержит значение «1,9999», вернет значение «1», а если базовое значение <span sdata="langKeyword" value="decimal"><span class="keyword">decimal</span></span> равно «3000000000», то произойдет переполнение значения <span sdata="langKeyword" value="int"><span class="keyword">int</span></span> и результат будет равен «-1294967296».</p></li><li><p><span class="label">В зависимости от данных (z)</span>. Для преобразования из базовых символьных типов в числовые типы требуется, чтобы символьные типы содержали значения, которые могут быть преобразованы в данный тип. Никакие другие преобразования не выполняются. Если значение слишком велико для метода считывания, то оно является недопустимым. Например, если вызывается метод <b>getInt</b> относительно столбца varchar(50), который содержит значение «53», значение возвращается в виде <span sdata="langKeyword" value="int"><span class="keyword">int</span></span>, однако, если базовое значение ― «xyz» или «3000000000», возникает ошибка.</p></li></ul><p>Если вызывается метод <b>getString</b> относительно типа данных столбца <span sdata="langKeyword" value="binary"><span class="keyword">binary</span></span>, <span sdata="langKeyword" value="varbinary"><span class="keyword">varbinary</span></span>, <span sdata="langKeyword" value="varbinary(max)"><span class="keyword">varbinary(max)</span></span> или <span sdata="langKeyword" value="image"><span class="keyword">image</span></span>, значение возвращается в виде шестнадцатеричного значения строки.</p></div><h1 class="heading">Преобразование метода обновления</h1><div id="sectionSection1" class="section" name="collapseableSection" style=""><p>Для данных на языке Java, передаваемых методам <b>update&lt;Type&gt;()</b> класса <a href="eaffcff1-286c-459f-83da-3150778480c9.htm">SQLServerResultSet</a>, применяются следующие виды преобразования.</p><img alt="JDBCUpdaterConversions" src="../art/JDBC_JDBCUpdatterConversions.gif" /><p>Преобразования, поддерживаемые методами обновления драйвера JDBC, делятся на три категории.</p><ul><li><p><span class="label">Без потерь (x)</span>. Преобразования для случаев, когда тип обновления является таким же или меньшим, чем базовый тип сервера. Например, при вызове метода <b>updateBigDecimal</b> для базового десятичного столбца сервера преобразование не потребуется.</p></li><li><p><span class="label">С преобразованием (y)</span>. Преобразования из числовых типов сервера в типы языка Java, когда преобразование осуществляется стандартным образом и отвечает правилам преобразования языка Java. Для этих видов преобразования точные значения всегда усекаются (и никогда не округляются), а при переполнении значение сокращается по модулю размера типа назначения (меньшего). Например, вызов метода <b>updateDecimal</b> для базового столбца <span sdata="langKeyword" value="int"><span class="keyword">int</span></span>, который содержит значение «1,9999», вернет значение «1», а если базовое значение <span sdata="langKeyword" value="decimal"><span class="keyword">decimal</span></span> равно «3000000000», то произойдет переполнение значения <span sdata="langKeyword" value="int"><span class="keyword">int</span></span> и результат будет равен «-1294967296».</p></li><li><p><span class="label">В зависимости от данных (z)</span>. Для преобразования из типов данных базового источника в типы данных назначения требуется, чтобы содержащиеся значения могли быть преобразованы в типы назначения. Никакие другие преобразования не выполняются. Если значение слишком велико для метода считывания, то оно является недопустимым. Например, если метод <b>updateString</b> с аргументом «53» вызывается относительно столбца типа int, обновление завершается успешно, однако, если значение исходной строки ― «foo» или «3000000000», возникает ошибка.</p></li></ul><p>Если вызывается метод <b>updateString</b> относительно типа данных столбца <span sdata="langKeyword" value="binary"><span class="keyword">binary</span></span>, <span sdata="langKeyword" value="varbinary"><span class="keyword">varbinary</span></span>, <span sdata="langKeyword" value="varbinary(max)"><span class="keyword">varbinary(max)</span></span> или <span sdata="langKeyword" value="image"><span class="keyword">image</span></span>, значение строки обрабатывается как шестнадцатеричное значение строки.</p><p>Если столбец SQL Server имеет тип данных <span sdata="langKeyword" value="XML"><span class="keyword">XML</span></span>, то значение данных должно быть допустимым <span sdata="langKeyword" value="XML"><span class="keyword">XML</span></span>. При вызове методов <b>updateBytes</b>, <b>updateBinaryStream</b> и <b>updateBlob</b> значение данных должно быть шестнадцатеричным представлением для строки XML-символов. Например: </p><div class="sampleCode"><span codeLanguage="other"><pre>&lt;hello&gt;world&lt;/hello&gt; = 0x3C68656C6C6F3E776F726C643C2F68656C6C6F3E </pre></span></div><p>Обратите внимание, что метка следования байтов (BOM) является обязательной, если XML-символы имеют определенную кодировку.</p></div><h1 class="heading">Преобразование метода задания</h1><div id="sectionSection2" class="section" name="collapseableSection" style=""><p>Для данных на языке Javа, передаваемых методам <b>set&lt;Type&gt;()</b> класса <a href="a8481c06-fbba-432b-8c69-4f4619c20ad4.htm">SQLServerPreparedStatement</a> и класса <a href="30710a63-c05d-47d9-9cf9-c087a1c76373.htm">SQLServerCallableStatement</a> применяются следующие виды преобразования.</p><img alt="JDBCSetterConversions" src="../art/JDBC_JDBCSetterConversions_v2.gif" /><p>Сервер проверяет любые виды преобразования и возвращает ошибку при неудачном завершении.</p><p>Если это тип данных <span sdata="langKeyword" value="String"><span class="keyword">String</span></span> и значение превышает длину <span sdata="langKeyword" value="VARCHAR"><span class="keyword">VARCHAR</span></span>, то оно сопоставляется с типом <span sdata="langKeyword" value="LONGVARCHAR"><span class="keyword">LONGVARCHAR</span></span>. Аналогичным образом тип данных <span sdata="langKeyword" value="NVARCHAR"><span class="keyword">NVARCHAR</span></span> сопоставляется с типом данных <span sdata="langKeyword" value="LONGNVARCHAR"><span class="keyword">LONGNVARCHAR</span></span>, если его длина превышает поддерживаемую длину <span sdata="langKeyword" value="NVARCHAR"><span class="keyword">NVARCHAR</span></span>. То же относится и к значениям <span sdata="langKeyword" value="byte[]"><span class="keyword">byte[]</span></span>. Значения длиннее <span sdata="langKeyword" value="VARBINARY"><span class="keyword">VARBINARY</span></span> становятся <span sdata="langKeyword" value="LONGVARBINARY"><span class="keyword">LONGVARBINARY</span></span>.</p><p>Преобразования, поддерживаемые методами задания драйвера JDBC, делятся на три категории.</p><ul><li><p><span class="label">Без потерь (x)</span>. Преобразования для числовых случаев, когда тип задания является таким же или меньшим, чем базовый тип сервера. Например, при вызове метода <b>setBigDecimal</b> для базового серверного столбца <span sdata="langKeyword" value="decimal"><span class="keyword">decimal</span></span> преобразование не потребуется. В случае преобразования числовых данных в символьные тип данных Java <span sdata="langKeyword" value="numeric"><span class="keyword">numeric</span></span> преобразуется в <span sdata="langKeyword" value="String"><span class="keyword">String</span></span>. Например, вызов метода <b>setDouble</b> со значением «53» относительно столбца varchar(50), формирует символьное значение «53» в столбце назначения.</p></li><li><p><span class="label">С преобразованием (y)</span>. Преобразования из типа Java <span sdata="langKeyword" value="numeric"><span class="keyword">numeric</span></span> в базовый тип сервера <span sdata="langKeyword" value="numeric"><span class="keyword">numeric</span></span>, меньший по размеру. Такое преобразование выполняется обычным образом и следует соглашениям о преобразованиях в SQL Server. Точные значения всегда усекаются (никогда не округляются), а переполнение выводит ошибку неподдерживаемого преобразования. Например, вызов метода <b>updateDecimal</b> со значением «1,9999» для базового целочисленного столбца приводит к сохранению в целевом столбце значения «1», однако, если будет передано значение «3000000000», драйвер выдаст ошибку.</p></li><li><p><span class="label">В зависимости от данных (z)</span>. Преобразования из типа Java <span sdata="langKeyword" value="String"><span class="keyword">String</span></span> в базовый тип данных SQL Server зависят от следующих условий. Драйвер отправляет значение <span sdata="langKeyword" value="String"><span class="keyword">String</span></span> на SQL Server, а SQL Server при необходимости выполняет преобразование. Если свойство <b>sendStringParametersAsUnicode</b> имеет значение true, а базовым типом данных SQL Server является <span sdata="langKeyword" value="image"><span class="keyword">image</span></span>, то SQL Server не выполняет преобразование <span sdata="langKeyword" value="nvarchar"><span class="keyword">nvarchar</span></span> в <span sdata="langKeyword" value="image"><span class="keyword">image</span></span>, а вызывает исключение <b>SQLServerException</b>. Если параметр sendStringParametersAsUnicode установлен в значение false и базовый тип данных SQL Server равен <span sdata="langKeyword" value="image"><span class="keyword">image</span></span>, то SQL Server выполняет преобразование <span sdata="langKeyword" value="varchar"><span class="keyword">varchar</span></span> в <span sdata="langKeyword" value="image"><span class="keyword">image</span></span>, а исключение не вызывается.</p></li></ul><p>SQL Server выполняет преобразования и передает ошибки обратно драйверу JDBC, если возникают проблемы.</p><p>Если столбец SQL Server имеет тип данных <span sdata="langKeyword" value="XML"><span class="keyword">XML</span></span>, то значение данных должно быть допустимым <span sdata="langKeyword" value="XML"><span class="keyword">XML</span></span>. При вызове методов <b>updateBytes</b>, <b>updateBinaryStream</b> и <b>updateBlob</b> значение данных должно быть шестнадцатеричным представлением для строки XML-символов. Например: </p><div class="sampleCode"><span codeLanguage="other"><pre>&lt;hello&gt;world&lt;/hello&gt; = 0x3C68656C6C6F3E776F726C643C2F68656C6C6F3E </pre></span></div><p>Обратите внимание, что метка следования байтов (BOM) является обязательной, если XML-символы имеют определенную кодировку.</p></div><h1 class="heading">Преобразование относительно setObject</h1><div id="sectionSection3" class="section" name="collapseableSection" style=""><p>Для данных на языке Java, передаваемых методам <b>setObject(&lt;Type&gt;)</b> класса <a href="a8481c06-fbba-432b-8c69-4f4619c20ad4.htm">SQLServerPrepareStatement</a>, применяются следующие виды преобразования. </p><img alt="JDBCSetObjectConversions" src="../art/JDBC_JDBCSetObjectConversions.gif" /><p>Метод <b>setObject</b> с неуказанным типом назначения использует сопоставление по умолчанию. Если это тип данных <span sdata="langKeyword" value="String"><span class="keyword">String</span></span> и значение превышает длину <span sdata="langKeyword" value="VARCHAR"><span class="keyword">VARCHAR</span></span>, то оно сопоставляется с типом <span sdata="langKeyword" value="LONGVARCHAR"><span class="keyword">LONGVARCHAR</span></span>. Аналогичным образом тип данных <span sdata="langKeyword" value="NVARCHAR"><span class="keyword">NVARCHAR</span></span> сопоставляется с типом данных <span sdata="langKeyword" value="LONGNVARCHAR"><span class="keyword">LONGNVARCHAR</span></span>, если его длина превышает поддерживаемую длину <span sdata="langKeyword" value="NVARCHAR"><span class="keyword">NVARCHAR</span></span>. То же относится и к значениям <span sdata="langKeyword" value="byte[]"><span class="keyword">byte[]</span></span>. Значения длиннее <span sdata="langKeyword" value="VARBINARY"><span class="keyword">VARBINARY</span></span> становятся <span sdata="langKeyword" value="LONGVARBINARY"><span class="keyword">LONGVARBINARY</span></span>.</p><p>Преобразования, поддерживаемые методами setObject драйвера JDBC, делятся на три категории.</p><ul><li><p><span class="label">Без потерь (x)</span>. Преобразования для числовых случаев, когда тип задания является таким же или меньшим, чем базовый тип сервера. Например, при вызове метода <b>setBigDecimal</b> для базового серверного столбца <span sdata="langKeyword" value="decimal"><span class="keyword">decimal</span></span> преобразование не потребуется. В случае преобразования числовых данных в символьные тип данных Java <span sdata="langKeyword" value="numeric"><span class="keyword">numeric</span></span> преобразуется в <span sdata="langKeyword" value="String"><span class="keyword">String</span></span>. Например, вызов метода <b>setDouble</b> со значением «53» относительно столбца varchar(50) формирует символьное значение «53» в столбце назначения.</p></li><li><p><span class="label">С преобразованием (y)</span>. Преобразования из типа Java <span sdata="langKeyword" value="numeric"><span class="keyword">numeric</span></span> в базовый тип сервера <span sdata="langKeyword" value="numeric"><span class="keyword">numeric</span></span>, меньший по размеру. Такое преобразование выполняется обычным образом и следует соглашениям о преобразованиях в SQL Server. Точные значения всегда усекаются и никогда не округляются, а при переполнении возникает ошибка неподдерживаемого преобразования. Например, вызов метода <b>updateDecimal</b> со значением «1,9999» для базового целочисленного столбца приводит к сохранению в целевом столбце значения «1», но, если будет передано значение «3000000000», драйвер вызовет исключение.</p></li><li><p><span class="label">В зависимости от данных (z)</span>. Преобразования из типа Java <span sdata="langKeyword" value="String"><span class="keyword">String</span></span> в базовый тип данных SQL Server зависят от следующих условий. Драйвер отправляет значение <span sdata="langKeyword" value="String"><span class="keyword">String</span></span> на SQL Server, а SQL Server при необходимости выполняет преобразование. Если свойство соединения <b>sendStringParametersAsUnicode</b> имеет значение true, а базовым типом данных SQL Server является <span sdata="langKeyword" value="image"><span class="keyword">image</span></span>, то SQL Server не выполняет преобразование <span sdata="langKeyword" value="nvarchar"><span class="keyword">nvarchar</span></span> в <span sdata="langKeyword" value="image"><span class="keyword">image</span></span> и вызывает исключение SQLServerException. Если параметр <b>sendStringParametersAsUnicode</b> установлен в значение false, а базовый тип данных SQL Server равен <span sdata="langKeyword" value="image"><span class="keyword">image</span></span>, то SQL Server преобразует <span sdata="langKeyword" value="varchar"><span class="keyword">varchar</span></span> в <span sdata="langKeyword" value="image"><span class="keyword">image</span></span>, а исключение не вызывается.</p></li></ul><p>SQL Server выполняет ряд заданных преобразований и передает ошибки обратно драйверу JDBC, если возникают проблемы. Преобразование на стороне клиента является исключением и выполняется только в случае значений <span sdata="langKeyword" value="date"><span class="keyword">date</span></span>, <span sdata="langKeyword" value="time"><span class="keyword">time</span></span>, <span sdata="langKeyword" value="timestamp"><span class="keyword">timestamp</span></span>, <span sdata="langKeyword" value="Boolean"><span class="keyword">Boolean</span></span> и <span sdata="langKeyword" value="String"><span class="keyword">String</span></span>.</p><p>Если столбец SQL Server имеет тип данных <span sdata="langKeyword" value="XML"><span class="keyword">XML</span></span>, то значение данных должно быть допустимым <span sdata="langKeyword" value="XML"><span class="keyword">XML</span></span>. При вызове методов setObject(byte[], SQLXML), setObject(inputStream, SQLXML) или setObject(Blob, SQLXML) значение данных должно быть шестнадцатеричным представлением для строки XML-символов. Например: </p><div class="sampleCode"><span codeLanguage="other"><pre>&lt;hello&gt;world&lt;/hello&gt; = 0x3C68656C6C6F3E776F726C643C2F68656C6C6F3E </pre></span></div><p>Обратите внимание, что метка следования байтов (BOM) является обязательной, если XML-символы имеют определенную кодировку.</p></div><span id="seeAlsoSpan"><h1 class="heading">См. также</h1></span><div id="seeAlsoSection" class="section" name="collapseableSection" style=""><div class="seeAlsoStyle"><span sdata="link"><a href="7802328d-4d23-4775-9573-4169b127d258.htm">Основные сведения о типах данных драйвера JDBC</a></span></div></div></div><div id="footer" class="section"><span id="feedbackarea">Отправить <a href="javascript:SubmitFeedback('DevDocs@Microsoft.com','','','','8.0.12060.10000','%0\dСпасибо%20за%20отзыв!%20Отзывы%20помогают%20команде%20разработчиков%20в%20улучшении%20документации.%20Просматривая%20ваши%20отзывы,%20корпорация%20Майкрософт%20может%20спросить%20по%20электронной%20почте%20ваше%20мнение,%20касающееся%20определенного%20решения.%20Адрес%20электронной%20почты%20не%20используется%20в%20других%20целях%20и%20удаляется%20корпорацией%20Майкрософт%20после%20завершения%20просмотра.%0\AДополнительные%20сведения%20о%20политике%20конфиденциальности%20корпорации%20Майкрософт%20см.%20на%20странице%20http://privacy.microsoft.com/ru-ru/default.aspx.%0\A%0\d','Отзывы%20пользователей.');">отзыв</a> об этом разделе в Майкрософт.</span><span id="copyrightarea"><p><a href="9bad553b-9e70-4696-8499-2e35f772a1e0.htm">© © Корпорация Майкрософт (Microsoft Corporation), 2012 г. Все права защищены.</a></p></span></div></div></body></html>