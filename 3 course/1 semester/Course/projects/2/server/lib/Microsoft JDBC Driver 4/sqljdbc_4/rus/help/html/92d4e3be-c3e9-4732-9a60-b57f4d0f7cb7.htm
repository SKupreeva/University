<html xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><head><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" /><META NAME="save" CONTENT="history" /><title>Использование адаптивной буферизации</title><meta name="Language" content="ru-RU" /><meta name="System.Keywords" content="adaptive" /><meta name="System.Keywords" content="адаптивная буферизация" /><meta name="System.Keywords" content="isWrapperFor" /><meta name="System.Keywords" content="selectMethod" /><meta name="System.Keywords" content="unwrap" /><meta name="Microsoft.Help.Id" content="92d4e3be-c3e9-4732-9a60-b57f4d0f7cb7" /><meta name="Description" content="Адаптивная буферизация, разработана для получения любых данных большого объема без затрат на использование серверных курсоров. Приложения могут использовать функцию адаптивной буферизации со всеми версиями SQL Server, поддерживаемыми драйвером." /><meta name="Microsoft.Help.ContentType" content="Concepts" /><link rel="stylesheet" type="text/css" href="../local/Classic.css" /><script type="text/javascript" src="../scripts/EventUtilities.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/SplitScreen.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/Dropdown.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/script_manifold.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/script_feedBack.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/CheckboxMenu.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/CommonUtilities.js">&amp;nbsp;</script><script type="text/javascript" src="../local/script_main.js">&amp;nbsp;</script></head><body><div id="header"><table id="bottomTable" cellpadding="0" cellspacing="0"><tr><td align="left"><span id="headerBold">Использование адаптивной буферизации</span></td></tr></table><table id="gradientTable"><tr><td class="nsrBottom" background="../icons/gradient.gif" /></tr></table></div><div id="mainSection"><div id="mainBody"><div class="introduction"><p>Адаптивная буферизация, разработана для получения любых данных большого объема без затрат на использование серверных курсоров. Приложения могут использовать функцию адаптивной буферизации со всеми версиями SQL Server, поддерживаемыми драйвером.</p><p>Как правило, когда драйвер Драйвер Microsoft JDBC для SQL Server выполняет запрос, он получает все результаты с сервера и загружает их в память приложения. Хотя при данном подходе минимизируется потребление ресурсов SQL Server, в приложении JDBC может возникнуть исключение <b>OutOfMemoryError</b> для запросов, производящих слишком большие результаты.</p><p>Чтобы приложения могли обрабатывать результаты очень большого объема, драйвер Драйвер Microsoft JDBC для SQL Server реализует адаптивную буферизацию. При адаптивной буферизации драйвер извлекает результаты выполнения инструкции из экземпляра SQL Server по мере того, как они нужны приложению, а не все сразу. Драйвер также удаляет результаты, когда приложение теряет к ним доступ. Ниже приводятся примеры ситуаций, когда адаптивная буферизация может быть полезной. </p><ul><li><p><b>Запрос возвращает результирующий набор очень большого объема.</b> Приложение может выполнить инструкцию SELECT, возвращающую больше строк, чем может уместиться в памяти приложения. В предыдущих версиях приложение должно было использовать серверный курсор, чтобы избежать ошибки <b>OutOfMemoryError</b>. Адаптивная буферизация обеспечивает возможность однопроходного просмотра данных в режиме только для чтения для результирующего набора произвольно большого объема без использования курсора сервера. </p></li><li><p><b>Запрос создает очень большие столбцы </b><a href="eaffcff1-286c-459f-83da-3150778480c9.htm">SQLServerResultSet</a><b> или значения параметров OUT </b><a href="30710a63-c05d-47d9-9cf9-c087a1c76373.htm">SQLServerCallableStatement</a><b>:</b> приложение может получить одно значение (столбец или параметр OUT), которое слишком велико, чтобы целиком поместиться в память приложения. Адаптивная буферизация позволяет клиентскому приложению извлекать такое значение в качестве потока, используя метод <b>getAsciiStream</b>, <b>getBinaryStream</b> или <b>getCharacterStream</b>. Приложение извлекает значение из экземпляра SQL Server по мере чтения потока.</p><p /></li></ul><div style="margin: .5em 1.5em .5em 1.5em"><b></b><p>Благодаря адаптивной буферизации драйвер JDBC помещает в буфер только необходимое количество данных. Драйвер не позволяет любому открытому методу контролировать или ограничивать размер буфера.</p></div></div><h1 class="heading">Настройка адаптивной буферизации</h1><div id="sectionSection0" class="section" name="collapseableSection" style=""><p>Начиная с драйвера JDBC версии 2.0 по умолчанию используется режим «<span sdata="langKeyword" value="adaptive"><span class="keyword">adaptive</span></span>». Другими словами, чтобы получить адаптивное поведение буферизации, приложению не нужно запрашивать адаптивное поведение явным образом. В версии 1.2, однако, по умолчанию использовался режим буферизации «<span sdata="langKeyword" value="full"><span class="keyword">full</span></span>», поэтому приложение должно было запросить режим адаптивной буферизации явным образом.</p><p>Существуют три способа, с помощью которых приложение может запросить выполнение адаптивной буферизации.</p><ul><li><p>Приложение может задать свойству подключения <span sdata="langKeyword" value="responseBuffering"><span class="keyword">responseBuffering</span></span> значение «adaptive». Дополнительные сведения о настройке свойств соединения см. в разделе <span sdata="link"><a href="f1b62700-f046-488d-bd6b-a5cd8fc345b7.htm">Задание свойств соединения</a></span>. </p></li><li><p>Приложение может использовать метод <a href="c9e43ff2-8117-4dca-982d-83c863d0c8e1.htm">setResponseBuffering</a> объекта <a href="097434fd-2b74-411c-a5ed-eba04481dde5.htm">SQLServerDataSource</a> для установки режима буферизации ответов для всех подключений, созданных посредством объекта <a href="097434fd-2b74-411c-a5ed-eba04481dde5.htm">SQLServerDataSource</a>.</p></li><li><p>Приложение может использовать метод <a href="9f489835-6cda-4c8c-b139-079639a169cf.htm">setResponseBuffering</a> класса <a href="ec24963c-8b51-4838-91e9-1fbfa2347451.htm">SQLServerStatement</a>, чтобы установить режим буферизации ответов для определенного объекта инструкции. </p></li></ul><p>При использовании драйвера JDBC версии 1.2 приложения должны были приводить объект инструкции к классу <a href="ec24963c-8b51-4838-91e9-1fbfa2347451.htm">SQLServerStatement</a>, чтобы использовать метод <a href="9f489835-6cda-4c8c-b139-079639a169cf.htm">setResponseBuffering</a>. В примере кода в <span sdata="link"><a href="6c986144-3854-4352-8331-e79eccbefc28.htm">Образец считывания данных большого объема</a></span> и <span sdata="link"><a href="58c76635-a117-4661-8781-d6cb231c5809.htm">Образец считывания данных большого объема с помощью хранимых процедур</a></span> показана эта устаревшая практика. </p><p>Однако, начиная с драйвера JDBC версии 2.0 приложения могут использовать методы <a href="53f3291f-d43a-476b-a656-d86168dacf6c.htm">isWrapperFor</a> и <a href="ce680176-ef04-4e44-bb6c-ec50bd06e7e6.htm">unwrap</a> для получения доступа к функциям, предоставляемым поставщиками, без необходимости реализации иерархии класса. Образец кода см. в разделе <span sdata="link"><a href="76ecc05f-a77d-40a2-bab9-91a7fcf17347.htm">Образец обновления данных большого объема</a></span>.</p></div><h1 class="heading">Извлечение данных большого объема при помощи адаптивной буферизации</h1><div id="sectionSection1" class="section" name="collapseableSection" style=""><p>Когда большие значения считываются в первый раз при помощи методов получения потока &lt;Type&gt; и выполняется доступ к столбцам ResultSet и параметрам OUT CallableStatement в порядке возвращения из SQL Server, адаптивная буферизация минимизирует использование памяти приложения при обработке результатов. При использовании адаптивной буферизации происходит следующее.</p><ul><li><p>Методы <b>get&lt;Type&gt;Stream</b>, определенные в классах <a href="eaffcff1-286c-459f-83da-3150778480c9.htm">SQLServerResultSet</a> и <a href="30710a63-c05d-47d9-9cf9-c087a1c76373.htm">SQLServerCallableStatement</a>, возвращают потоки только для чтения по умолчанию, хотя потоки можно сбросить, если они выделены приложением. Если приложению необходимо выполнить операцию <span class="code">reset</span> для сброса потока, приложение сначала должно вызвать метод<span class="code">mark</span> относительно этого потока. </p></li><li><p>Методы <b>get&lt;Type&gt;Stream</b>, определенные в классах <a href="24170524-e1ab-4e80-8fd1-6688efacfbde.htm">SQLServerClob</a> и <a href="88bd8623-889d-4b5d-99ff-c85b32f3ff5c.htm">SQLServerBlob</a>, возвращают потоки, которые всегда можно переместить в исходное положение потока без вызова метода <span class="code">mark</span>. </p></li></ul><p>Когда приложение использует адаптивную буферизацию, значения, извлекаемые методами <b>get&lt;Type&gt;Stream</b>, могут быть извлечены только один раз. Если выполняется попытка вызвать какой-либо метод <b>get&lt;Type&gt;</b> относительно того же столбца или параметра после вызова метода того же объекта <b>get&lt;Type&gt;Stream</b>, возникает исключение с сообщением: «Доступ к данным уже был осуществлен, данные недоступны для этого столбца или параметра».</p></div><h1 class="heading">Руководство по использованию адаптивной буферизации</h1><div id="sectionSection2" class="section" name="collapseableSection" style=""><p>Разработчики должны следовать данному руководству для минимизации использования памяти приложением.</p><ul><li><p>Старайтесь не использовать свойство строки соединения <span sdata="langKeyword" value="selectMethod=cursor"><span class="keyword">selectMethod=cursor</span></span>, позволяющее приложению обрабатывать результирующий набор очень большого объема. Функция адаптивной буферизации позволяет приложениям обрабатывать очень большие однопроходные результирующие наборы, доступные только для чтения, без использования серверного курсора. Обратите внимание, что задание параметра <span sdata="langKeyword" value="selectMethod=cursor"><span class="keyword">selectMethod=cursor</span></span> оказывает влияние на все однопроходные результирующие наборы только для чтения, формируемые этим подключением. Другими словами, если приложение рутинно обрабатывает короткие результирующие наборы с несколькими строками, создание, считывание и закрытие серверного курсора для каждого результирующего набора будет использовать больше ресурсов как на стороне клиента, так и на стороне сервера, чем в случае, когда параметру <span sdata="langKeyword" value="selectMethod"><span class="keyword">selectMethod</span></span> не задано значение <span sdata="langKeyword" value="cursor"><span class="keyword">cursor</span></span>.</p></li><li><p>Считывайте текстовые или двоичные значения большого объема в виде потока при помощи методов <b>getAsciiStream</b>, <b>getBinaryStream</b> или <b>getCharacterStream</b> вместо методов <b>getBlob</b> или <b>getClob</b>. Начиная с версии 1.2 класс <a href="30710a63-c05d-47d9-9cf9-c087a1c76373.htm">SQLServerCallableStatement</a> предоставляет новые методы <b>get&lt;Type&gt;Stream</b> для этой цели.</p></li><li><p>Убедитесь, что столбцы со значениями потенциально большого объема размещаются последними в списке столбцов в инструкции SELECT и что методы <b>get&lt;Type&gt;Stream</b> класса <a href="eaffcff1-286c-459f-83da-3150778480c9.htm">SQLServerResultSet</a> используются для доступа к столбцам в порядке их выбора.</p></li><li><p>Убедитесь, что параметры OUT со значениями потенциально большого объема объявляются последними в списке параметров в инструкции SQL, используемой для создания <a href="30710a63-c05d-47d9-9cf9-c087a1c76373.htm">SQLServerCallableStatement</a>. Кроме того, убедитесь, что методы <b>get&lt;Type&gt;Stream</b> класса <a href="30710a63-c05d-47d9-9cf9-c087a1c76373.htm">SQLServerCallableStatement</a> используются для доступа к параметрам OUT в порядке их объявления.</p></li><li><p>Старайтесь не выполнять более одной инструкции относительно одного соединения одновременно. Выполнение другой инструкции до обработки результатов предыдущей инструкции может привести к тому, что необработанные результаты будут загружаться в память приложения.</p></li><li><p>В следующих случаях использование <span sdata="langKeyword" value="selectMethod=cursor"><span class="keyword">selectMethod=cursor</span></span> вместо <span sdata="langKeyword" value="responseBuffering=adaptive"><span class="keyword">responseBuffering=adaptive</span></span> может оказаться более эффективным.</p><ul><li><p>Когда приложение медленно обрабатывает однопроходной результирующий набор только для чтения. Например, при считывании каждой строки после введения пользователем каких-то данных использование <span sdata="langKeyword" value="selectMethod=cursor"><span class="keyword">selectMethod=cursor</span></span> вместо <span sdata="langKeyword" value="responseBuffering=adaptive"><span class="keyword">responseBuffering=adaptive</span></span> может уменьшить потребление ресурсов службой SQL Server. </p></li><li><p>Если приложение обрабатывает два или более однопроходных результирующих набора только для чтения одновременно относительно одного подключения, использование <span sdata="langKeyword" value="selectMethod=cursor"><span class="keyword">selectMethod=cursor</span></span> вместо <span sdata="langKeyword" value="responseBuffering=adaptive"><span class="keyword">responseBuffering=adaptive</span></span> может уменьшить память, необходимую драйверу для обработки этих результирующих наборов.</p></li></ul><p>В обоих случаях необходимо учитывать чрезмерное потребление ресурсов при создании, считывании и закрытии серверных курсоров.</p></li></ul><p>Помимо этого, в следующем списке приводятся рекомендации для прокручиваемых и однопроходных обновляемых результирующих наборов.</p><ul><li><p>Для прокручиваемых результирующих наборов при возвращении блока строк драйвер всегда считывает число строк, указанных методом <a href="7bc96930-b0c9-42f6-8df9-1d8d824408b3.htm">getFetchSize</a> объекта <a href="eaffcff1-286c-459f-83da-3150778480c9.htm">SQLServerResultSet</a>, даже если включена адаптивная буферизация. Если прокручивание вызывает ошибку <b>OutOfMemoryError</b>, можно уменьшить число строк, возвращаемых при вызове метода <a href="233bf4f8-4758-42d0-a80b-33e34fa78027.htm">setFetchSize</a> объекта <a href="eaffcff1-286c-459f-83da-3150778480c9.htm">SQLServerResultSet</a>, чтобы задать размеру выборки меньшее число строк; при необходимости можно даже задать 1. Если это не позволяет устранить ошибку <b>OutOfMemoryError, </b>старайтесь не включать столбцы очень большого объема в прокручиваемые результирующие наборы.</p></li><li><p>Для однопроходных обновляемых результирующих наборов при возвращении блока строк драйвер обычно считывает в память число строк, указанное методом <a href="7bc96930-b0c9-42f6-8df9-1d8d824408b3.htm">getFetchSize</a> объекта <a href="eaffcff1-286c-459f-83da-3150778480c9.htm">SQLServerResultSet</a>, даже если для соединения включена адаптивная буферизация. Если вызов метода <a href="60248447-6908-4036-a779-a501453cd553.htm">next</a> объекта <a href="eaffcff1-286c-459f-83da-3150778480c9.htm">SQLServerResultSet</a> приводит к ошибке <b>OutOfMemoryError</b>, можно уменьшить число возвращаемых строк, вызвав метод <a href="233bf4f8-4758-42d0-a80b-33e34fa78027.htm">setFetchSize</a> объекта <a href="eaffcff1-286c-459f-83da-3150778480c9.htm">SQLServerResultSet</a>, чтобы задать размеру выборки меньшее число строк; при необходимости можно даже задать 1. Можно также запретить драйверу помещать в буфер строки, вызвав метод <a href="9f489835-6cda-4c8c-b139-079639a169cf.htm">setResponseBuffering</a> объекта <a href="ec24963c-8b51-4838-91e9-1fbfa2347451.htm">SQLServerStatement</a> с параметром «<span sdata="langKeyword" value="adaptive"><span class="keyword">adaptive</span></span>», прежде чем выполнять инструкцию. Поскольку результирующий набор не является прокручиваемым, если приложение получает доступ к значению столбца большого объема при помощи одного из методов <b>get&lt;Type&gt;Stream</b>, драйвер отбрасывает значение, как только приложение его считывает, так же как это происходит в случае с однопроходными результирующими наборами только для чтения.</p></li></ul></div><span id="seeAlsoSpan"><h1 class="heading">См. также</h1></span><div id="seeAlsoSection" class="section" name="collapseableSection" style=""><div class="seeAlsoStyle"><span sdata="link"><a href="e1592499-b87b-45ee-bab8-beaba8fde841.htm">Повышение производительности и надежности с помощью драйвера JDBC</a></span></div></div></div><div id="footer" class="section"><span id="feedbackarea">Отправить <a href="javascript:SubmitFeedback('DevDocs@Microsoft.com','','','','8.0.12060.10000','%0\dСпасибо%20за%20отзыв!%20Отзывы%20помогают%20команде%20разработчиков%20в%20улучшении%20документации.%20Просматривая%20ваши%20отзывы,%20корпорация%20Майкрософт%20может%20спросить%20по%20электронной%20почте%20ваше%20мнение,%20касающееся%20определенного%20решения.%20Адрес%20электронной%20почты%20не%20используется%20в%20других%20целях%20и%20удаляется%20корпорацией%20Майкрософт%20после%20завершения%20просмотра.%0\AДополнительные%20сведения%20о%20политике%20конфиденциальности%20корпорации%20Майкрософт%20см.%20на%20странице%20http://privacy.microsoft.com/ru-ru/default.aspx.%0\A%0\d','Отзывы%20пользователей.');">отзыв</a> об этом разделе в Майкрософт.</span><span id="copyrightarea"><p><a href="9bad553b-9e70-4696-8499-2e35f772a1e0.htm">© © Корпорация Майкрософт (Microsoft Corporation), 2012 г. Все права защищены.</a></p></span></div></div></body></html>