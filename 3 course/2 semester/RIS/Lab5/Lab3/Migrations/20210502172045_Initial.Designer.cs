// <auto-generated />
using Lab3.Task;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Lab3.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210502172045_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Lab3.DataAccessModels.CustomerEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("firstAddress");

                    b.Property<string>("name");

                    b.Property<int>("officeId");

                    b.Property<string>("secondAddress");

                    b.Property<string>("surname");

                    b.HasKey("id");

                    b.HasIndex("officeId");

                    b.ToTable("CustomerEntity");
                });

            modelBuilder.Entity("Lab3.Task.DataAccessModels.OfficeEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("name");

                    b.HasKey("id");

                    b.ToTable("OfficeEntity");
                });

            modelBuilder.Entity("Lab3.DataAccessModels.CustomerEntity", b =>
                {
                    b.HasOne("Lab3.Task.DataAccessModels.OfficeEntity", "office")
                        .WithMany("Customers")
                        .HasForeignKey("officeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
